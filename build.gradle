buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath "de.undercouch:gradle-download-task:3.1.2"
    }
}



// Because Forge is too stupid to fix Deprecation Issues, and we cannot fix it on our end! (until we fork Forge)
allprojects {
	tasks.withType(Javadoc) {
		//options.compilerArgs << "-Xlint:deprecation"
		options.addStringOption('Xdoclint:none', '-quiet')
	}
}

import de.undercouch.gradle.tasks.download.Download

apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'signing'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.gt.version}"
group= "gregtech"
archivesBaseName = "gregtech"


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding("UTF-8")

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "idea"
}

idea.module.inheritOutputDirs = true

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
}

repositories {}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion    
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	exclude '**/Thumbs.db'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest {
        //attributes 'FMLCorePlugin': 'WhateverLoaderClass'
        //attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

artifacts {
    archives devJar
}